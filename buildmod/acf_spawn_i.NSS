////////////////////////////////////////////////////////////////////////////////
//
//  System Name : ACR Configuration File
//     Filename : acf_spawn_i
//      Version : 0.12
//         Date : 3/18/07
//       Author : Ronan & AcadiusLost
//
//  Local Variable Prefix =
//
//
//  Dependencies external of nwscript:
//   -Seamless AT prespawning requires acr_areatrans_i
//
//  Description
//  This file is used to configure the ACR's spawn system to the desired
//  behavior of the module. See below for what options are available.
//
//  Revision History:
//   0.1: 5/13/06, Ronan- Initial commit.
//   0.11: 3/17/07, AcadiusLost- Added option for prespawning
//   0.12: 3/18/07, AcadiusLost- Added control over prespawn prediction
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes ////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Constants ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// This is a timer which starts when the last PC exits an area. When the timer
// runs out, that area is despawned.
const float _SPAWN_AREA_DESPAWN_DELAY = 300.0;

// The number of seconds in between spawn refreshes on PC-occupied areas.
const float _SPAWN_REFRESH_DELAY = 60.0;

// Determines whether the spawn system should pre-spawn an area when a PC steps into 
//  a seamless AT- this may affect performance, as the PC won't neccessarily travel to
//  the area (if they back off the AT) but it should help fight spawn lag.
const int _SPAWN_PRESPAWN_SEAMLESS = TRUE;

// Another performance tweak: this controls whether the spawn system should take into
//  account the predicted Seamless AT arrival point of a PC in a neighboring area- it 
//  is only useful if seamless prespawning is enabled (above), in which it protects
//  against a potential for a spawn and a PC to be dropped next to each other without
//  warning.  It may be disabled at a module team's discression for performance reasons
//  if necessary.  Definitely disable this if _SPAWN_PRESPAWN_SEAMLESS = FALSE.
//  note also, this check will be bypassed if a builder has set the spawn point to spawn
//  even within sight of a PC. (ACR_SPAWN_IN_PC_SIGHT = 1)
const int _SPAWN_PRESPAWN_PREDICTION = TRUE;

////////////////////////////////////////////////////////////////////////////////
// Structures //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Global Variables ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Prototypes /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Definitions ////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////