////////////////////////////////////////////////////////////////////////////////
/*
    This script covers the GUI-interface for the new ACR resting system, wherein
    casters are given opportunity to customize their spell payload for the day
    before entering play.
*/
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes ////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#include "acr_resting_i"

////////////////////////////////////////////////////////////////////////////////
// Constants ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Structures //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Global Variables ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Prototypes /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Definitions ////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void main()
{
    if (!GetLocalInt(OBJECT_SELF, ACR_FREE_SPELL_PREP))
    {
        SendMessageToPC(OBJECT_SELF, "You cannot prepare spells right now-- this is probably a bug. Submit a ticket to the ACR and tell us how you did it!");
        return;
    }
    if (!ACR_REST_ENABLED)
    { 
        SendMessageToPC(OBJECT_SELF, "Whoops! Looks like the ACR resting system isn't turned on right now. Submit a ticket to your server team about this!");
        return; 
    }
    if (ACR_GetIsPlayerDead(OBJECT_SELF)) 
    { 
        SendMessageToPC(OBJECT_SELF, "Whoops! We didn't realise you were dead until just now. Sorry about that!");
        return; 
    }
    if (GetLocalInt(OBJECT_SELF, ACR_PPS_QUARANTINED)) 
    { 
        SendMessageToPC(OBJECT_SELF, "Whoops! We didn't realise you were in quarantine until just now. Sorry about that!");
        return; 
    }

    DeleteLocalInt(OBJECT_SELF, ACR_FREE_SPELL_PREP);
    _playerRestoreSpells(OBJECT_SELF, IntToString(CLASS_TYPE_CLERIC),  GetCurrentHitPoints(OBJECT_SELF));
    _playerRestoreSpells(OBJECT_SELF, IntToString(CLASS_TYPE_DRUID),   GetCurrentHitPoints(OBJECT_SELF));
    _playerRestoreSpells(OBJECT_SELF, IntToString(CLASS_TYPE_PALADIN), GetCurrentHitPoints(OBJECT_SELF));
    _playerRestoreSpells(OBJECT_SELF, IntToString(CLASS_TYPE_RANGER),  GetCurrentHitPoints(OBJECT_SELF));
    _playerRestoreSpells(OBJECT_SELF, IntToString(CLASS_TYPE_WIZARD),  GetCurrentHitPoints(OBJECT_SELF));
}